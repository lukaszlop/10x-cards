name: Test and Build main

on:
  # Uruchomienie po push do main branch
  push:
    branches: [main]

  # Mo≈ºliwo≈õƒá uruchomienia manualnego
  workflow_dispatch:

  # Uruchomienie na pull requestach do main
  pull_request:
    branches: [main]

jobs:
  # Job 1: Linting i testy jednostkowe
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        node-version:
          - "20" # Previous LTS (backward compatibility)
          - "22" # Current LTS (project version)
      fail-fast: false # Continue testing other versions if one fails
    env:
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            .eslintcache
            node_modules/.cache
            dist
          key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ hashFiles('package-lock.json', 'src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.node-version }}-
            ${{ runner.os }}-build-

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run ESLint (CI-friendly)
        run: npm run lint:ci
        timeout-minutes: 5

      - name: Run unit tests with coverage
        run: npx vitest run --coverage
        timeout-minutes: 15

      - name: Upload Coverage Reports
        uses: ./.github/actions/upload-coverage
        if: always() && matrix.node-version == '22' # Only upload coverage from main version
        with:
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          coverage-files: ./coverage/lcov.info
          fail-ci-if-error: false

  # Job 2: Build produkcyjny
  build:
    name: Production Build
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 20
    strategy:
      matrix:
        node-version:
          - "22" # Main build version (current LTS)
          - "20" # Test build compatibility with previous LTS
      fail-fast: false
    env:
      NODE_ENV: production
      # Use placeholder values for build-time compilation (not used in runtime)
      PUBLIC_SUPABASE_URL: https://placeholder-supabase-url.supabase.co
      PUBLIC_SUPABASE_KEY: placeholder_anon_key

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            .eslintcache
            node_modules/.cache
            dist
          key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ hashFiles('package-lock.json', 'src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.node-version }}-
            ${{ runner.os }}-build-

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build for production
        run: npm run build
        timeout-minutes: 15

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '22' # Only upload artifacts from main version
        with:
          name: production-build
          path: dist/
          retention-days: 7

  # Job 3: Testy E2E w trybie development
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test # Only need test job, not build
    timeout-minutes: 45
    env:
      NODE_ENV: test
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            .eslintcache
            node_modules/.cache
            dist
          key: ${{ runner.os }}-build-22-${{ hashFiles('package-lock.json', 'src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-22-
            ${{ runner.os }}-build-

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: "22" # Use current LTS for E2E tests

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
            ~/Library/Caches/ms-playwright
            %USERPROFILE%\AppData\Local\ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        timeout-minutes: 8
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Install Playwright dependencies only
        run: npx playwright install-deps chromium
        timeout-minutes: 3
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: Setup E2E Environment
        uses: ./.github/actions/setup-e2e-env
        with:
          e2e-username: ${{ secrets.E2E_USERNAME }}
          e2e-password: ${{ secrets.E2E_PASSWORD }}
          e2e-username-id: ${{ secrets.E2E_USERNAME_ID }}
          test-supabase-url: ${{ secrets.TEST_SUPABASE_URL }}
          test-supabase-key: ${{ secrets.TEST_SUPABASE_KEY }}

      - name: Run E2E tests with retry
        run: |
          echo "üß™ Running E2E tests with real test database..."

          # Function to run tests with retry logic
          run_e2e_tests() {
            local attempt="$1"
            local max_attempts=3

            echo "üìã Attempt $attempt of $max_attempts"

            if npm run test:e2e; then
              echo "‚úÖ E2E tests passed on attempt $attempt"
              return 0
            else
              echo "‚ùå E2E tests failed on attempt $attempt"
              if [ "$attempt" -lt "$max_attempts" ]; then
                echo "üîÑ Retrying in 10 seconds..."
                sleep 10
                return 1
              else
                echo "üí• All retry attempts exhausted"
                return 1
              fi
            fi
          }

          # Run tests with retry
          for i in {1..3}; do
            if run_e2e_tests "$i"; then
              break
            fi
            if [ "$i" -eq 3 ]; then
              echo "üö® E2E tests failed after 3 attempts"
              exit 1
            fi
          done
        timeout-minutes: 25

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Job 4: Podsumowanie rezultat√≥w
  summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [test, build, e2e]
    if: always()
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Analyze Pipeline Results
        uses: ./.github/actions/simple-summary
        with:
          test-result: ${{ needs.test.result }}
          build-result: ${{ needs.build.result }}
          e2e-result: ${{ needs.e2e.result }}
